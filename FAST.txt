;    FAST - Set CPU Speed to 36.964Mhz. Change UART setting for 115200 baud.

stksiz          EQU             40h             ; Working stack size
restart         EQU             0000h           ; CP/M restart vector
bdos            EQU             0005h           ; BDOS invocation vector
iobyte          EQU             0003h           ; IOBYTE address
stack           EQU             01C4          	; Stack top
CCR             EQU             0DFh            ; CPU Control Register
CMR             EQU             0DEh            ; Clock Multiplier Register
DCNTL           EQU             0F2h            ; DMA/Wait Control Register
ASTC0L          EQU             0DAh            ; ASCI Time Const Register L
ASTC0H          EQU             0DCh            ; ASCI Time Const Register H
ASTC1L          EQU             0DBh            ; ASCI Time Const Register L
ASTC1H          EQU             0DDh            ; ASCI Time Const Register H
CSIO            EQU             0CAh            ; CSI/O Register

               	ORG             0100h
main:
                ld              (stksav),sp     ; Save stack
                ld              sp,(stack)      ; Set new stack
                call            init
                jr              nz,exit         ; Abort if init fails
                ld              de,msghello     ; Display start message
                call            prtstr          ; Print it
                ld              a,0Ah           ; Carriage return
                call            prtchar         ; Print it
                ld              a,0Ah           ; Carriage return
                call            prtchar         ; Print it
                di
                call            setspeed        ; Change CPU parameters
                ei
exit:           ; Clean up and return to the command processor
                ld              sp,(stksav)     ; Restore stack
                ret                             ; Return to CP/M

init:
                ld              hl,(restart+1)

                ld              de,-3
                add             hl,de
                ld              (cbftbl),hl

                xor             a
                ret

prtchar:        ; Print a character in register 'A'
                push            bc
                push            de
                push            hl
                ld              e,a
                ld              c,02h           ; BDOS function to output a
                call            bdos            ; charcter
                pop             hl
                pop             de
                pop             bc
                ret

prtstr:         ; Print a string terminated with a dollar
                push            bc
                push            de
                push            hl
                ld              c,09h           ; BDOS function to output a
                call            bdos            ; string
                pop             hl
                pop             de
                pop             bc
                ret

; ********************* 	SETUP WAIT STATES	****************************

;				DCNTL - DMA / WAIT CONTROL REGISTER
;				
;	WAIT STATES  |	MW1	MW0	I/0W1	I/0W0	DMSI1	DMSI0	DIM1	DIM0
;	----------------------------------------------------------------------------
;		     |	7	6	5	4	3	2	1	0
;	----------------------------------------------------------------------------
;	0	     |	0	0			0	0	0	0
;	1	     | 	0	1			Setup for CP/M - dont change
;	2	     |	1	0		
;	3	     |	1	1		
;		
;	0	     |			0	0
;	2	     |			0	1
;	3	     |			1	0
;	4	     |			1	1

;************************************************************************************
; Uncomment one of the settings below to change memory and I/O wait states.
; If you are having stabilty issues or corrupted data change to a slower setting.
setspeed:
;	ORIGINAL SETTING 
		ld		a,40h 	; 1 memory wait state / 2 I/O wait states. 

;       LONGEST WAIT TIMES FOR SLOW MEMORY AND SLOW I/O
;		ld		a,0F0h	; 3 memory wait states / 4 I/O wait states.

;	ORIGINAL MEMORY SPEED - SLOW I/O wait states.
;		ld		a,70h	; 1 memory wait state / 4 I/O wait states.


;*************************************************************************************
                out0            (DCNTL),a       ; DMA WAIT Control register



; CPU clock speed settings

                ld              a,0BFh          ; Set multiplier x2
                out0            (CMR),a         ; Clock Multiplier register
		ld              a,80h           ; XTAL/1
                out0            (CCR),a         ; CPU Control Register

setbaudrates:   ; Set new values for 115200 baud on UART 0
                in0             a,(0C2h)	;ASCI Channel CTRL Reg B
                set             0,a		; Set divide ratio = /2
                res             1,a
                res             2,a
                out0            (0C2h),a	; Update setting
                in0             a,(0D2h)	; ASCI Extension CTRL Reg
                res             3,a		; BRG0 Mode = 0
                res             4,a		; X1 bit = Baud rate gen
                out0            (0D2h),a	; Update setting

                ; Set new values for 115200 baud on UART 1
                in0             a,(0C3h)	; ASCI Channel CTRL Reg B
                set             0,a		; Set divide ratio = /2
                res             1,a
                res             2,a
                out0            (0C3h),a	; Update setting
                in0             a,(0D3h)	; ASCI Extension CTRL Reg
                res             3,a		; BRG1 Mode = 0
                res             4,a		; X1 bit = Baud rate gen
                out             (0D3h),a	; Update setting
                ret

; Storage section

cbftbl:         defw          0              ; Addr of CBIOS function table
stksav:         defw          0              ; Stack pointer saved at start
msghello:       defm            'FAST   36864 MHz,  1 MEM W/S,  0 IO W/S $'	; Change the MEM W/S and IO W/S message to reflect the changes above.

                END
